{
  "version": 3,
  "sources": ["../src/TemplatingUtilities.ts", "../src/Observable.ts", "../src/NameTagSvg.ts", "../src/RegistrationForm.ts", "../src/main.ts"],
  "sourcesContent": ["export interface ElementIdPrefixAndSuffix {\n  prefix?: string;\n  suffix?: string;\n}\nconst getElementIdsFactory = <T extends readonly string[]>(elementBaseIds: T) => ({ prefix = \"\", suffix = \"\" }: ElementIdPrefixAndSuffix = {}) => elementBaseIds.reduce((elementNames, elementName) => {\n  elementNames[elementName as T[number]] = prefix + elementName + suffix;\n  return elementNames;\n}, {} as Record<T[number], string>\n);\nconst getElementsFactory = <T extends Record<string, HTMLOrSVGElement>>(elementBaseIds: readonly (keyof T)[]) => ({ prefix = \"\", suffix = \"\" }: ElementIdPrefixAndSuffix = {}) => elementBaseIds.reduce((elements, elementName) => {\n  Object.assign(elements, { [elementName]: document.getElementById(`${prefix}${elementName as string}${suffix}`) });\n  return elements;\n}, {} as T\n) as T;\n\nexport const elementIdFunctions = <T extends Record<string, HTMLOrSVGElement>>(elementBaseIds: readonly (keyof T)[]) => {\n  const getElementIds = getElementIdsFactory(elementBaseIds as readonly (string & keyof T)[]);\n  const getElements = getElementsFactory(elementBaseIds);\n  return {getElementIds, getElements};\n}\n\nexport const appendHtmlToElement = (element: Element, html: string) => {\n\tconst tempDiv = document.createElement('div');\n\ttempDiv.innerHTML = html;\n\twhile (tempDiv.children.length > 0) {\n\t\tconst firstChild = tempDiv.firstChild!;\n\t\ttempDiv.removeChild(firstChild);\n\t\telement.appendChild(firstChild);\n\t}\n};\n\nexport type ElementIds<T extends Record<string, HTMLOrSVGElement>> = Record<string & keyof T, string>;\n\nexport class HtmlTemplate<T extends Record<string, HTMLOrSVGElement>> {\n  readonly elementIds: ElementIds<T>;\n  readonly elements: T;\n\n  constructor(\n    containerElement: Element,\n    generateHtml: (elementIds: ElementIds<T>) => string, \n    elementBaseIds: readonly (keyof T)[],\n    elementIdPrefixAndSuffix?: ElementIdPrefixAndSuffix\n  ) {\n    const {getElementIds, getElements} = elementIdFunctions<T>(elementBaseIds);\n    this.elementIds = getElementIds(elementIdPrefixAndSuffix);\n\t\tappendHtmlToElement(containerElement, generateHtml(this.elementIds));\n    this.elements = getElements(elementIdPrefixAndSuffix);\n  }\n\n}", "// Short & simple observables similar to mobx\n// 2023-10-05\n\nconst computationStack: ObservableComputation<any>[] = [];\nconst computationsRequiringRecalculation = new Set<ObservableComputation<any>>();\n\nlet alreadyRecomputingInvalidatedValues = false;\nconst recomputeInvalidatedValues = () => {\n\tif (!alreadyRecomputingInvalidatedValues) {\n\t\ttry {\n\t\t\talreadyRecomputingInvalidatedValues = true;\n\t\t\twhile (computationsRequiringRecalculation.size > 0) {\n\t\t\t\tconst [computation] = [...computationsRequiringRecalculation];\n\t\t\t\tcomputation?.compute();\n\t\t\t}\n\t\t} finally {\n\t\t\talreadyRecomputingInvalidatedValues = false;\n\t\t}\n\t}\n}\n\nexport interface Observable<T> {\n\tonChange: (listener: (newValue: T, oldValue: T | undefined) => void) => void;\n\tlisten: (listener: (newValue: T, oldValue: T | undefined) => void) => void;\n\tvalue: T;\n}\n\nabstract class ObservableBase<T> implements Observable<T> {\n\t#changeHandlers = new Set<(newValue: T, oldValue: T | undefined) => void>;\n\t#dependentComputations = new Set<ObservableComputation<unknown>>();\n\n\tabstract value: T;\n\n\t#addDependentComputations = (...dependentComputations: ObservableComputation<unknown>[]) => {\n\t\tfor (const dependentComputation of dependentComputations) {\n\t\t\tthis.#dependentComputations.add(dependentComputation);\n\t\t}\n\t}\n\n\tprotected callBeforeGetValue = () => {\n\t\tconst [topOfComputationStack] = computationStack;\n\t\tif (topOfComputationStack != null) {\n\t\t\tthis.#addDependentComputations(topOfComputationStack);\n\t\t}\n\t}\n\n\tprotected callAfterSetChangesValue = (newValue: T, oldValue: T | undefined) => {\n\t\tfor (const dependentComputation of this.#dependentComputations) {\n\t\t\tdependentComputation.invalidate();\n\t\t}\n\t\tthis.#signalChange(newValue, oldValue);\n\t\trecomputeInvalidatedValues();\n\t}\n\n\t#signalChange = (newValue: T, oldValue: T | undefined) => {\n\t\tfor (const changeHandler of this.#changeHandlers) {\n\t\t\ttry {\n\t\t\t\tchangeHandler(newValue, oldValue);\n\t\t\t} catch {}\n\t\t}\n\t}\n\n\tonChange = (listener: (newValue: T, oldValue: T | undefined) => void) => this.#changeHandlers.add(listener);\n\n\tlisten = (listener: (newValue: T, oldValue: T | undefined) => void) => {\n\t\tthis.onChange(listener);\n\t\tlistener(this.value, this.value);\n\t}\n\n\tconstructor() {\n\t}\n}\n\nexport class ObservableHTMLInputElementValue<T extends string = string> extends ObservableBase<T> {\n\treadonly #element: HTMLInputElement;\n\n\t/**\n\t * Returns the HTMLInputElement that is being observed.\n\t * \n\t * Since the value of that element should always be read and written to\n\t * using this class, we hide the value field from the element so that\n\t * callers do not accidentally read or write it directly, which could\n\t * lead to the value changing without being observed.\n\t */\n\tget element() { return this.#element as Omit<HTMLInputElement, \"value\">}\n\t#cachedValue: T | undefined;\n\n\tget value(): T {\n\t\tthis.callBeforeGetValue();\n\t\treturn this.#element.value as T;\n\t}\n\n\tset value(newValue: T) {\n\t\tconst oldValue = this.#element.value as T;\n\t\tif (this.#name != null) {\n\t\t\tconsole.log(`Update ${this.#name}`, newValue, oldValue);\n\t\t}\n\t\tif (newValue !== oldValue) {\n\t\t\tthis.#element.value = this.#cachedValue = newValue;\n\t\t\tthis.callAfterSetChangesValue(newValue, oldValue);\n\t\t}\n\t}\n\n\t#changeListener = () => {\n\t\tconst oldValue = this.#cachedValue;\n\t\tthis.#cachedValue = this.#element.value as T;\n\t\tthis.callAfterSetChangesValue(this.#element.value as T, oldValue);\n\t}\n\n\treadonly #name?: string;\n\tconstructor({initialValue, element}:{\n\t\telement: HTMLInputElement,\n\t\tinitialValue?: T\n\t}, name?: string) {\n\t\tsuper();\n\t\tthis.#name = name;\n\t\tthis.#element = element;\n\t\tif (initialValue != null) {\n\t\t\tthis.#element.value = initialValue;\n\t\t}\n\t\tthis.#element.addEventListener('input', () => this.#changeListener() );\n\t\tthis.#element.addEventListener('change', () => this.#changeListener() );\n\t}\n}\n\nexport class ObservableValue<T> extends ObservableBase<T> {\n\t#value: T;\n\n\tget value(): T {\n\t\tthis.callBeforeGetValue();\n\t\treturn this.#value;\n\t}\n\n\tset value(newValue: T) {\n\t\tconst oldValue = this.#value;\n\t\tif (oldValue !== newValue) {\n\t\t\tthis.#value = newValue;\n\t\t\tthis.callAfterSetChangesValue(newValue, oldValue);\n\t\t}\n\t}\n\n\tconstructor(initialValue: T) {\n\t\tsuper();\n\t\tthis.#value = initialValue;\n\t}\n}\n\nexport class ObservableComputation<T> extends ObservableBase<T> {\n\t#cachedResult: T | undefined;\n\t#valid = false;\n\n\tget valid(): boolean {\n\t\treturn !this.#valid;\n\t}\n\n\tinvalidate() {\n\t\tthis.#valid = false;\n\t\tcomputationsRequiringRecalculation.add(this);\n\t}\n\n\tcompute = () => {\n\t\tconst oldValue = this.#cachedResult;\n\t\tcomputationStack.unshift(this);\n\t\tlet newResult: T | undefined;\n\t\ttry {\n\t\t\tthis.#cachedResult = newResult = this.#computation();\n\t\t\tthis.#valid = true;\n\t\t\treturn newResult;\n\t\t} finally {\n\t\t\tif (this.logAs != null) {\n\t\t\t\tconsole.log(`Computed ${this.logAs}`, newResult)\n\t\t\t}\n\t\t\tcomputationStack.shift();\n\t\t\tcomputationsRequiringRecalculation.delete(this);\n\t\t\tif (this.#valid && newResult !== oldValue) {\n\t\t\t\tthis.callAfterSetChangesValue(newResult!, oldValue!);\n\t\t\t}\n\t\t}\n\t}\n\n\tget value(): T {\n\t\tthis.callBeforeGetValue();\n\t\tif (this.#valid) {\n\t\t\treturn this.#cachedResult!;\n\t\t} else {\n\t\t\treturn this.compute();\n\t\t}\n\t}\n\n\t#computation: () => T;\n\n\tconstructor(computation: () => T, protected logAs?: string) {\n\t\tsuper();\n\t\tthis.#computation = computation;\n\t}\n}\n", "import { ElementIdPrefixAndSuffix, ElementIds, HtmlTemplate } from \"./TemplatingUtilities\";\nimport { ObservedByNameTagSvg as NameTagSvgObservableParameters } from \"./ObservedByNameTagSvg\";\n\nconst parseFontSize = (fontSize: string) => {\n\tconst trimmedFontSize = fontSize.trim();\n\tconst magnitude = parseFloat(trimmedFontSize.slice(0, -2));\n\tconst units = trimmedFontSize.slice(-2);\n\treturn {magnitude, units};\n}\n\nconst resizeSvgTextElementFactory = (element: SVGTextElement, maxTextWidth: number) => {\n\tconst originalSize = parseFontSize(element.getAttribute(\"font-size\")!);\n\tlet currentFontSizeMagnitude = originalSize.magnitude;\n\tconst resize = () => {\n\t\tconst widthAtCurrentFontSize = element.getComputedTextLength();\n\t\tconst adjustedSizeMagnitude = Math.min(originalSize.magnitude, currentFontSizeMagnitude * maxTextWidth / widthAtCurrentFontSize);\n\t\tif (adjustedSizeMagnitude != currentFontSizeMagnitude) {\n\t\t\tcurrentFontSizeMagnitude = adjustedSizeMagnitude;\n\t\t\telement.setAttribute(\"font-size\", `${currentFontSizeMagnitude}${originalSize.units}`);\n\t\t}\n\t};\n\treturn resize;\n}\n\nconst simpleFormatSvgText = (simpleFormattedText: string): SVGTSpanElement[] => {\n\tlet remainingText = simpleFormattedText;\n\tlet startAt = 0;\n\tlet formatting = {\n\t\tbold: false,\n\t\titalics: false,\n\t\tunderline: false,\n\t};\n\tconst tagActions: Record<string, (isClosingTag: boolean)=>void> = {\n\t\t\"b\": (isClosingTag) => { formatting.bold = !isClosingTag },\n\t\t\"i\": (isClosingTag) => { formatting.italics = !isClosingTag },\n\t\t\"u\": (isClosingTag) => { formatting.underline = !isClosingTag },\n\t};\n\tconst resultTSpans: SVGTSpanElement[] = [];\n\tconst dumpText = (textToDump: string) => {\n\t\tconst tspan = document.createElementNS('http://www.w3.org/2000/svg', \"tspan\");\n\t\ttspan.textContent = textToDump;\n\t\tif (formatting.underline) {\n\t\t\ttspan.style.textDecoration = 'underline';\n\t\t};\n\t\tif (formatting.bold) {\n\t\t\ttspan.style.fontWeight = 'bold';\n\t\t};\n\t\tif (formatting.italics) {\n\t\t\ttspan.style.fontStyle = 'italic';\n\t\t};\n\t\tresultTSpans.push(tspan);\n\t}\n\twhile (true) {\n\t\tlet start = remainingText.indexOf('<', startAt);\n\t\tif (start < 0) {\n\t\t\tdumpText(remainingText);\n\t\t\treturn resultTSpans;\t\n\t\t}\n\t\tconst isClosingTag = remainingText.substring(start + 1, start + 2) === \"/\";\n\t\tconst end = remainingText.indexOf('>', start + 1);\n\t\tif (end < 0) {\n\t\t\tdumpText(remainingText);\n\t\t\treturn resultTSpans;\t\n\t\t}\n\t\tconst tagName = remainingText.substring(start + (isClosingTag ? 2 : 1), end).toLocaleLowerCase();\n\t\tconst action = tagActions[tagName];\n\t\tif (action != null) {\n\t\t\tif (start > 0) {\n\t\t\t\tdumpText(remainingText.substring(0, start));\n\t\t\t}\n\t\t\taction(isClosingTag);\n\t\t\tremainingText = remainingText.substring(end + 1);\n\t\t\tstartAt = 0;\n\t\t} else {\n\t\t\tstartAt = start + 1;\n\t\t}\n\t};\n}\n\nconst NameTagSvgElementIdsSvg = [ \n\t\"nameTagSvg\",\n] as const;\nconst NameTagElementIdsSvgText = [\n\t\"nameTagLine1SvgText\",\n\t\"nameTagLine2SvgText\",\n\t\"nameTagLine3SvgText\",\n\t\"nameTagLine4SvgText\",\n] as const;\n\ntype NameTagElements =\n\tRecord<NonNullable<(typeof NameTagSvgElementIdsSvg)[number]>, SVGSVGElement> &\n  Record<NonNullable<(typeof NameTagElementIdsSvgText)[number]>, SVGTextElement>;\n\nconst NameTagIds = [ \n\t\t...NameTagSvgElementIdsSvg,\n\t\t...NameTagElementIdsSvgText,\n\t] as const satisfies readonly (keyof NameTagElements)[];\n\n\nconst html = String.raw;\nconst width = 9; // name tag standard is 9 cm;\nconst height = 9; // name tag standard is 5.8cm, but adding footer for branding;\nconst secondaryFontSize = \"0.525pt\" as const;\nconst getNameTagSvg = (ids: ElementIds<NameTagElements>) => html`<svg \n\tid=\"${ids.nameTagSvg}\"\n\tviewBox=\"0 0 ${width} ${height}\"\n\tstyle=\"width: ${width}cm; height: ${height}cm; font-family: sans-serif; margin: 0; padding:0; background-color: white;\"\n>\n\t<text id=\"${ids.nameTagLine1SvgText}\" dominant-baseline=\"middle\" text-anchor=\"middle\" x=\"${width/2}\" y=\"1.85\" font-size=\"1.75pt\" style=\"font-weight: bold;\"></text>\n\t<text id=\"${ids.nameTagLine2SvgText}\" dominant-baseline=\"middle\" text-anchor=\"middle\" x=\"${width/2}\" y=\"3.1\" font-size=\"${secondaryFontSize}\" style=\"font-weight: bold;\"></text>\n\t<text id=\"${ids.nameTagLine3SvgText}\" dominant-baseline=\"middle\" text-anchor=\"middle\" x=\"${width/2}\" y=\"4.35\" font-size=\"${secondaryFontSize}\"></text>\n\t<text id=\"${ids.nameTagLine4SvgText}\" dominant-baseline=\"middle\" text-anchor=\"middle\" x=\"${width/2}\" y=\"5.5\" font-size=\"${secondaryFontSize}\"></text>\n\t<rect x=\"0\" y=\"${height-2.99}\" height=\"3\" width=\"${width}\" fill=\"rgba(64, 0, 0, 1)\"></rect>\n\t<text id=\"logoPlaceholder1\" dominant-baseline=\"middle\" text-anchor=\"middle\" x=\"${width/2}\" y=\"${height-1.7}\" font-size=\"${secondaryFontSize}\" style=\"font-weight: bold; fill: white;\">\n\t\t<tspan>Event Branding</tspan>\n\t</text>\n\t<text id=\"logoPlaceholder2\" dominant-baseline=\"middle\" text-anchor=\"middle\" x=\"${width/2}\" y=\"${height-0.9}\" font-size=\"${secondaryFontSize}\" style=\"font-weight: bold; fill: white;\">\n\t\t<tspan>Belongs Down Here</tspan>\n\t</text>\n</svg>`;\n\nconst getNameTagHtml = (ids: ElementIds<NameTagElements>) => {\n\tconst svg = getNameTagSvg(ids);\n\treturn html`<label class=\"name-tag-preview-label\">your name tag will look like this</label><div class=\"name-tag-container\">${svg}</div>`;\n}\nconst nameTagTextMaxWidth = 8;\nexport class NameTagSvg extends HtmlTemplate<NameTagElements> {\n\tconstructor(containerElement: Element, public readonly observes: NameTagSvgObservableParameters, elementIdPrefixAndSuffix?: ElementIdPrefixAndSuffix) {\n\t\tsuper(containerElement, getNameTagHtml, NameTagIds, elementIdPrefixAndSuffix)\t\t\n\t\tfor (const [lineSvgText, lineObserved] of [\n\t\t\t[this.elements.nameTagLine1SvgText, this.observes.nameTagLine1],\n\t\t\t[this.elements.nameTagLine2SvgText, this.observes.nameTagLine2],\n\t\t\t[this.elements.nameTagLine3SvgText, this.observes.nameTagLine3],\n\t\t\t[this.elements.nameTagLine4SvgText, this.observes.nameTagLine4],\n\t\t] as const) {\n\t\t\tconst resizeNameTagLine = resizeSvgTextElementFactory(lineSvgText, nameTagTextMaxWidth);\n\t\t\tlineObserved.listen(lineText => {\n\t\t\t\tlineSvgText.replaceChildren(...simpleFormatSvgText(lineText));\n\t\t\t\tresizeNameTagLine();\n\t\t\t});\n\t\t}\n\t}\n}\n", "import { ElementIds, HtmlTemplate } from \"./TemplatingUtilities\";\nimport { ObservableComputation, ObservableHTMLInputElementValue, ObservableValue } from \"./Observable\"\nimport { ElementIdPrefixAndSuffix } from \"./TemplatingUtilities\";\nimport { ObservedByNameTagSvg } from \"./ObservedByNameTagSvg\";\nimport { NameTagSvg } from \"./NameTagSvg\";\n\nconst OpennessToTheyPronouns = {\n\twelcome: 'welcome',\n\tprefer: 'prefer',\n\tdecline: 'decline',\n} as const;\ntype OpennessToTheyPronouns = NonNullable<(typeof OpennessToTheyPronouns)[keyof typeof OpennessToTheyPronouns]>;\n\nconst RegistrationFormElementIdsInputElement = [\n  \"affiliateTextInputElement\",\n  \"nameTextInputElement\",\n  \"nameTagLine1TextInputElement\",\n  \"nameTagLine2TextInputElement\",\n  \"nameTagLine3TextInputElement\",\n  \"nameTagLine4TextInputElement\",\n  \"preferredThirdPersonPronounTextInputElement\",\n\t\"opennessToTheyPronounsWelcome\",\n//\t\"opennessToTheyPronounsPrefer\",\n\t\"opennessToTheyPronounsDecline\",\n\t\"opennessToTheyPronounsWelcomeLabel\",\n\t\"opennessToTheyPronounsPreferLabel\",\n\t\"opennessToTheyPronounsDeclineLabel\",\n\t\"opennessToTheyPronounsRadioButtonContainer\",\n] as const;\nconst RegistrationMiscElement= [\n\t\"nameTagContainerElement\"\n] as const;\n\ntype RegistrationFormElements = Record<NonNullable<(typeof RegistrationFormElementIdsInputElement)[number]>, HTMLInputElement> &\n\tRecord<NonNullable<(typeof RegistrationMiscElement)[number]>, HTMLElement> ;\n\nconst RegistrationFormElementIds = [\n\t...RegistrationFormElementIdsInputElement,\n\t...RegistrationMiscElement,\n] as const satisfies readonly (keyof RegistrationFormElements)[];\n\nconst html = String.raw;\nconst getRegistrationFormHtml = (ids: ElementIds<RegistrationFormElements>) => html`\n<div class=\"registration-form\">\n  <div class=\"form-input-container\">\n    <label for=\"${ids.nameTextInputElement}\">name</label>\n    <input type=\"text\" id=\"${ids.nameTextInputElement}\" autocapitalize=\"words\" placeholder=\"\" />\n  </div>\n  <div class=\"form-input-container\">\n    <label for=\"${ids.preferredThirdPersonPronounTextInputElement}\">preferred pronouns</label>\n    <input type=\"text\" id=\"${ids.preferredThirdPersonPronounTextInputElement}\" autocapitalize=\"none\" placeholder=\"they/them\" />\n  </div>\n\t<div id=\"${ids.opennessToTheyPronounsRadioButtonContainer}\" class=\"radio-group-container\">\n\t\t<div class=\"radio-element-and-label-container\">\n\t\t\t<input type=\"radio\" name=\"opennessToTheyPronouns\" value=\"welcome\" id=\"${ids.opennessToTheyPronounsWelcome}\" />\n\t\t\t<label id=\"${ids.opennessToTheyPronounsWelcomeLabel}\" for=\"${ids.opennessToTheyPronounsWelcome}\">I welcome gender-neutral (<i>they</i>) pronouns.<br/>(this promotes inclusivity)</label>\n\t</div>\n\t\t<div class=\"radio-element-and-label-container\">\n\t\t\t<input type=\"radio\" name=\"opennessToTheyPronouns\" value=\"decline\" id=\"${ids.opennessToTheyPronounsDecline}\" />\n\t\t\t<label id=\"${ids.opennessToTheyPronounsDeclineLabel}\" for=\"${ids.opennessToTheyPronounsDecline}\">I prefer other pronouns <b>only</b>.</label>\n\t\t</div>\n\t</div>\n\t<div class=\"form-input-container\">\n\t\t<label for=\"${ids.affiliateTextInputElement}\">affiliations(s)</label>\n\t\t<input type=\"text\" id=\"${ids.affiliateTextInputElement}\" />\n\t</div>\n\t<div id=\"${ids.nameTagContainerElement}\"></div>\n  <div class=\"form-input-container\">\n    <label for=\"${ids.nameTagLine1TextInputElement}\">\n\t\t\tedit your name tag\n\t\t</label>\n    <input type=\"text\" id=\"${ids.nameTagLine1TextInputElement}\"/>\n    <label for=\"${ids.nameTagLine2TextInputElement}\"></label><input type=\"text\" id=\"${ids.nameTagLine2TextInputElement}\"/>\n    <label for=\"${ids.nameTagLine3TextInputElement}\"></label><input type=\"text\" id=\"${ids.nameTagLine3TextInputElement}\"/>\n    <label for=\"${ids.nameTagLine4TextInputElement}\"></label><input type=\"text\" id=\"${ids.nameTagLine4TextInputElement}\"/>\n  </div>\n</div>\n`;\n\n/*\t\t<div class=\"radio-element-and-label-container\">\n\t\t\t<input type=\"radio\" name=\"opennessToTheyPronouns\" value=\"prefer\" id=\"${ids.opennessToTheyPronounsPrefer}\" />\n\t\t\t<label id=\"${ids.opennessToTheyPronounsPreferLabel}\" for=\"${ids.opennessToTheyPronounsPrefer}\">Add <i>they</i> to my preferred pronouns.<br/>(this further promotes inclusivity)</label>\n\t\t</div>\n*/ \n\nexport class RegistrationForm extends HtmlTemplate<RegistrationFormElements> implements ObservedByNameTagSvg {\n\tnameTextInputElement: ObservableHTMLInputElementValue;\n\tget name() { return this.nameTextInputElement.value.trim(); }\n\n\taffiliateTextInputElement: ObservableHTMLInputElementValue;\n\n\tpreferredThirdPersonPronounTextInputElement: ObservableHTMLInputElementValue;\n\n\topennessToTheyPronouns = new ObservableValue<OpennessToTheyPronouns>(OpennessToTheyPronouns.welcome);\n\n\tnameTagLine1ObservableTextInputElement: ObservableHTMLInputElementValue;\n\tnameTagLine2ObservableTextInputElement: ObservableHTMLInputElementValue;\n\tnameTagLine3ObservableTextInputElement: ObservableHTMLInputElementValue;\n\tnameTagLine4ObservableTextInputElement: ObservableHTMLInputElementValue;\n\tnameTagLine1TextInputElementOverride = new ObservableValue<boolean>(false);\n\tnameTagLine2TextInputElementOverride = new ObservableValue<boolean>(false);\n\tnameTagLine3TextInputElementOverride = new ObservableValue<boolean>(false);\n\tnameTagLine4TextInputElementOverride = new ObservableValue<boolean>(false);\n\n\tpreferredThirdPersonPronounsFromInputText = new ObservableComputation( (): string[] => {\n\t\tconst reSpaceSlashOrCommaSequence = /[\\s\\/,]+/;\n\t\treturn this.preferredThirdPersonPronounTextInputElement.value.split(reSpaceSlashOrCommaSequence)\n\t\t\t.map(s => s.trim())\n\t\t\t.filter(x => x.length > 0);\n\t});\n\n\tpreferredThirdPersonPronounsFromInputTextSeparatedBySlash = new ObservableComputation( () =>\n\t\tthis.preferredThirdPersonPronounsFromInputText.value.join(\"/\")\n\t);\n\n\tpreferredThirdPersonPronounsFromInputTextContainsThey = new ObservableComputation( () =>\n\t\tthis.preferredThirdPersonPronounsFromInputText.value.find( pronoun => pronoun.toLocaleLowerCase() === \"they\") != null\n\t);\n\n\tpreferredThirdPersonPronouns = new ObservableComputation( (): string[] =>\n\t\tthis.preferredThirdPersonPronounsFromInputText.value.length === 0 ?\n\t\t\t[\"they\", \"them\"] :\n\t\t\t[\n\t\t\t\t...this.preferredThirdPersonPronounsFromInputText.value,\n\t\t\t\t...((this.opennessToTheyPronouns.value === OpennessToTheyPronouns.prefer && this.preferredThirdPersonPronounsFromInputTextContainsThey.value === false) ? [\"they\"] : [])\n\t\t\t]\n\t);\n\n\tmyOwnThirdPartyPronouns = new ObservableComputation( (): string =>\n\t\tthis.preferredThirdPersonPronounsFromInputText.value.length > 0 ?\n\t\t\tthis.preferredThirdPersonPronounsFromInputText.value.join('/') :\n\t\t\t'my own pronouns'\n\t);\n\n\ttheyIsAmongPreferredThirdPersonPronouns = new ObservableComputation( (): boolean => {\n\t\treturn this.preferredThirdPersonPronouns.value.find(pronoun => pronoun.toLocaleLowerCase() === \"they\") != null;\n\t});\n\n\tfirstName = new ObservableComputation( () =>\n\t\tthis.nameTextInputElement.value.trim().split(' ').filter( s => !s.endsWith('.'))[0] ?? \"\"\n\t)\n\n\tnameTagLine1TextInputElementPlaceholder = new ObservableComputation( () =>\n\t\tthis.firstName.value\n\t)\n\tnameTagLine1 = new ObservableComputation( () =>\n\t\tthis.nameTagLine1ObservableTextInputElement.value.length > 0 ? this.nameTagLine1ObservableTextInputElement.value : this.nameTagLine1TextInputElementPlaceholder.value\n\t)\n\n\tnameTagLine2TextInputElementPlaceholder = new ObservableComputation( () => {\n\t\tconst name = this.nameTextInputElement.value;\n\t\tconst line1 = this.nameTagLine1.value;\n\t\tif (name.startsWith(line1)) {\n\t\t\treturn name.slice(line1.length).trim();\n\t\t} else {\n\t\t\treturn name;\n\t\t}\n\t})\n\tnameTagLine2 = new ObservableComputation( () =>\n\t\tthis.nameTagLine2ObservableTextInputElement.value.length > 0 ? this.nameTagLine2ObservableTextInputElement.value : this.nameTagLine2TextInputElementPlaceholder.value\n\t)\n\n\tnameTagLine3TextInputElementPlaceholder = new ObservableComputation( () =>\n\t\tthis.affiliateTextInputElement.value\n\t)\n\tnameTagLine3 = new ObservableComputation( () =>\n\t\tthis.nameTagLine3ObservableTextInputElement.value.length > 0 ? this.nameTagLine3ObservableTextInputElement.value : this.nameTagLine3TextInputElementPlaceholder.value\n\t)\n\n\tnameTagLine4TextInputElementPlaceholder = new ObservableComputation( () => {\n\t\tconst shouldAppendTheWordsOrThey =\n\t\t\tthis.opennessToTheyPronouns.value === OpennessToTheyPronouns.welcome &&\n\t\t\t!this.theyIsAmongPreferredThirdPersonPronouns.value;\n\t\tconst ShouldAppendTheWordOnly = this.opennessToTheyPronouns.value === OpennessToTheyPronouns.decline && !this.theyIsAmongPreferredThirdPersonPronouns.value;\n\t\treturn `${this.preferredThirdPersonPronouns.value.join('/')}${\n\t\t\tshouldAppendTheWordsOrThey ? ` <i>or they</i>` : ``\n\t\t}${\n\t\t\tShouldAppendTheWordOnly ? ` <b>only</b>` : ``\n\t\t}`;\n\t});\n\tnameTagLine4 = new ObservableComputation( () =>\n\t\tthis.nameTagLine4ObservableTextInputElement.value.length > 0 ? this.nameTagLine4ObservableTextInputElement.value : this.nameTagLine4TextInputElementPlaceholder.value,\n\t)\n\n\tprefersThey = new ObservableComputation( () => \n\t\tthis.preferredThirdPersonPronounsFromInputText.value.length === 0 || this.preferredThirdPersonPronounsFromInputTextContainsThey.value === true\n\t);\n\n\tconstructor(containerElement: Element, elementIdPrefixAndSuffix?: ElementIdPrefixAndSuffix) {\n\t\tsuper(containerElement, getRegistrationFormHtml, RegistrationFormElementIds, elementIdPrefixAndSuffix);\n\n\t\tthis.nameTextInputElement = new ObservableHTMLInputElementValue({initialValue: \"\", element: this.elements.nameTextInputElement});\n\t\tthis.affiliateTextInputElement = new ObservableHTMLInputElementValue({initialValue: \"\", element: this.elements.affiliateTextInputElement});\n\t\tthis.preferredThirdPersonPronounTextInputElement = new ObservableHTMLInputElementValue({initialValue: \"\", element: this.elements.preferredThirdPersonPronounTextInputElement});\n\n\t\tthis.myOwnThirdPartyPronouns.listen( myOwnThirdPartyPronouns => {\n\t\t\tthis.elements.opennessToTheyPronounsDeclineLabel.textContent = `I prefer ${this.prefersThey.value ? 'other pronouns' : myOwnThirdPartyPronouns}`;\n\t\t\tthis.elements.opennessToTheyPronounsDeclineLabel.innerHTML += \" <i>only</i>.\"\n\t\t});\n\n\t\tconst opennessToTheyPronounsRadioButtons = [\n\t\t\t[this.elements.opennessToTheyPronounsDecline, this.elements.opennessToTheyPronounsDeclineLabel, OpennessToTheyPronouns.decline],\n\t\t\t[this.elements.opennessToTheyPronounsWelcome, this.elements.opennessToTheyPronounsWelcomeLabel, OpennessToTheyPronouns.welcome],\n//\t\t\t[this.elements.opennessToTheyPronounsPrefer, this.elements.opennessToTheyPronounsPreferLabel, OpennessToTheyPronouns.prefer],\n\t\t] as const;\n\n\t\tthis.prefersThey.listen( prefersThey => {\n\t\t\topennessToTheyPronounsRadioButtons.forEach( ([inputElement, labelElement]) => {\n\t\t\t\tif (prefersThey) {\n\t\t\t\t\tinputElement.setAttribute('disabled','');\n\t\t\t\t\tif (labelElement !== this.elements.opennessToTheyPronounsWelcomeLabel) {\n\t\t\t\t\t\tlabelElement.style.setProperty('color','rgba(128, 128, 128, 0.4');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinputElement.removeAttribute('disabled');\n\t\t\t\t\tlabelElement.style.removeProperty('color');\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t\topennessToTheyPronounsRadioButtons.forEach( ([radioElement, labelElement, elementValue]) => {\n\t\t\tradioElement.addEventListener('change', () => { this.opennessToTheyPronouns.value = elementValue });\n\t\t\tlabelElement.addEventListener('click', () => { if (!this.prefersThey.value) { this.opennessToTheyPronouns.value = elementValue }});\n\t\t\tthis.opennessToTheyPronouns.listen( opennessToTheyPronouns => {\n\t\t\t\tif (elementValue === opennessToTheyPronouns) {\n\t\t\t\t\tradioElement.setAttribute('checked', '');\n\t\t\t\t} else {\n\t\t\t\t\tradioElement.removeAttribute('checked');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.nameTagLine1ObservableTextInputElement= new ObservableHTMLInputElementValue({initialValue: \"\", element: this.elements.nameTagLine1TextInputElement});\n\t\tthis.nameTagLine2ObservableTextInputElement= new ObservableHTMLInputElementValue({initialValue: \"\", element: this.elements.nameTagLine2TextInputElement});\n\t\tthis.nameTagLine3ObservableTextInputElement= new ObservableHTMLInputElementValue({initialValue: \"\", element: this.elements.nameTagLine3TextInputElement});\n\t\tthis.nameTagLine4ObservableTextInputElement= new ObservableHTMLInputElementValue({initialValue: \"\", element: this.elements.nameTagLine4TextInputElement});\n\n\t\tfor (const [placeholder, input, override] of [\n\t\t\t[this.nameTagLine1TextInputElementPlaceholder, this.nameTagLine1ObservableTextInputElement, this.nameTagLine1TextInputElementOverride],\n\t\t\t[this.nameTagLine2TextInputElementPlaceholder, this.nameTagLine2ObservableTextInputElement, this.nameTagLine2TextInputElementOverride],\n\t\t\t[this.nameTagLine3TextInputElementPlaceholder, this.nameTagLine3ObservableTextInputElement, this.nameTagLine3TextInputElementOverride],\n\t\t\t[this.nameTagLine4TextInputElementPlaceholder, this.nameTagLine4ObservableTextInputElement, this.nameTagLine4TextInputElementOverride],\n\t\t] as const) {\n\t\t\tplaceholder.listen( lineText => {\n\t\t\t\tinput.element.setAttribute('placeholder', lineText ?? \"\");\n\t\t\t\tif (!override.value) {\n\t\t\t\t\tinput.value = lineText;\n\t\t\t\t}\n\t\t\t});\n\t\t\tinput.element.addEventListener('blur', () => {\n\t\t\t\toverride.value = input.value.length > 0 && input.value !== placeholder.value;\n\t\t\t})\n\t\t}\n\n\t\tnew NameTagSvg(this.elements.nameTagContainerElement, this);\n\t}\n}\n\n\n", "import { RegistrationForm } from \"./RegistrationForm\";\n// import { NameTagSvg } from \"./NameTagSvg\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst rootElement = document.querySelector(\"[data-registration-form-here]\");\n\tif (rootElement == null) return;\n\t// const form = \n\tnew RegistrationForm(rootElement);\n\t//\tnew NameTagSvg(rootElement, form);\n});\n"],
  "mappings": "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",
  "names": ["getElementIdsFactory", "elementBaseIds", "prefix", "suffix", "elementNames", "elementName", "getElementsFactory", "elements", "elementIdFunctions", "getElementIds", "getElements", "appendHtmlToElement", "element", "html", "tempDiv", "firstChild", "HtmlTemplate", "containerElement", "generateHtml", "elementIdPrefixAndSuffix", "__publicField", "computationStack", "computationsRequiringRecalculation", "alreadyRecomputingInvalidatedValues", "recomputeInvalidatedValues", "computation", "_changeHandlers", "_dependentComputations", "_addDependentComputations", "_signalChange", "ObservableBase", "__privateAdd", "dependentComputations", "dependentComputation", "__privateGet", "__publicField", "topOfComputationStack", "newValue", "oldValue", "changeHandler", "e", "listener", "_element", "_cachedValue", "_changeListener", "_name", "ObservableHTMLInputElementValue", "initialValue", "element", "name", "__privateSet", "_value", "ObservableValue", "_cachedResult", "_valid", "_computation", "ObservableComputation", "logAs", "newResult", "parseFontSize", "fontSize", "trimmedFontSize", "magnitude", "units", "resizeSvgTextElementFactory", "element", "maxTextWidth", "originalSize", "currentFontSizeMagnitude", "widthAtCurrentFontSize", "adjustedSizeMagnitude", "simpleFormatSvgText", "simpleFormattedText", "remainingText", "startAt", "formatting", "tagActions", "isClosingTag", "resultTSpans", "dumpText", "textToDump", "tspan", "start", "end", "tagName", "action", "NameTagSvgElementIdsSvg", "NameTagElementIdsSvgText", "NameTagIds", "html", "width", "height", "secondaryFontSize", "_a", "getNameTagSvg", "ids", "__template", "_b", "getNameTagHtml", "svg", "nameTagTextMaxWidth", "NameTagSvg", "HtmlTemplate", "containerElement", "observes", "elementIdPrefixAndSuffix", "lineSvgText", "lineObserved", "resizeNameTagLine", "lineText", "OpennessToTheyPronouns", "RegistrationFormElementIdsInputElement", "RegistrationMiscElement", "RegistrationFormElementIds", "html", "_a", "getRegistrationFormHtml", "ids", "__template", "RegistrationForm", "HtmlTemplate", "containerElement", "elementIdPrefixAndSuffix", "__publicField", "ObservableValue", "ObservableComputation", "reSpaceSlashOrCommaSequence", "x", "pronoun", "name", "line1", "shouldAppendTheWordsOrThey", "ShouldAppendTheWordOnly", "ObservableHTMLInputElementValue", "myOwnThirdPartyPronouns", "opennessToTheyPronounsRadioButtons", "prefersThey", "inputElement", "labelElement", "radioElement", "elementValue", "opennessToTheyPronouns", "placeholder", "input", "override", "lineText", "NameTagSvg", "rootElement", "RegistrationForm"]
}
